openapi: 3.0.0
info:
  title: 'Takebook API'
  contact:
    email: support@example.com
  version: 1.0.0
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: 'Autenticação de usuário'
      operationId: AuthLogin
      parameters:
        -
          name: email
          in: query
          description: 'E-mail para autenticação'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha para autenticação'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /admin/auth/login:
    post:
      tags:
        - auth
      summary: 'Autenticação da administração'
      operationId: AuthAdminLogin
      parameters:
        -
          name: email
          in: query
          description: 'E-mail para autenticação'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha para autenticação'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /auth/refresh:
    post:
      tags:
        - auth
      summary: 'Atualiza o token atual do usuário'
      operationId: AuthRefresh
      responses:
        '200':
          description: ...
  /auth/forgot:
    post:
      tags:
        - auth
      summary: 'Solicitação para alteração de senha'
      operationId: ForgotPassword
      parameters:
        -
          name: email
          in: query
          description: 'E-mail do usuário'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /auth/checkToken:
    post:
      tags:
        - auth
      summary: 'Verificação do token'
      operationId: CheckToken
      parameters:
        -
          name: email
          in: query
          description: 'E-mail do usuário'
          required: true
          schema:
            type: string
        -
          name: token
          in: query
          description: 'Token enviado no email do usuário'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /auth/reset:
    post:
      tags:
        - auth
      summary: 'Alteração de senha do usuário'
      operationId: ResetPassword
      parameters:
        -
          name: token
          in: query
          description: 'Token enviado no email do usuário'
          required: true
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do usuário'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Nova senha do usuário'
          required: true
          schema:
            type: string
        -
          name: password_confirmation
          in: query
          description: 'Confirmação da nova senha'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /books:
    get:
      tags:
        - books
      summary: 'Lista todos os livros'
      operationId: GetBooks
      parameters:
        -
          name: title
          in: query
          description: 'Nome do livro'
          required: false
          schema:
            type: string
        -
          name: author
          in: query
          description: 'Autor do livro'
          required: false
          schema:
            type: string
        -
          name: user_id
          in: query
          description: 'ID do anunciante'
          required: false
          schema:
            type: string
        -
          name: filter
          in: query
          description: 'Filtro de status'
          required: false
          schema:
            type: string
        -
          name: includes
          in: query
          description: 'Faz o include das relações '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    post:
      tags:
        - books
      summary: 'Cria um novo livro'
      operationId: PostBooks
      parameters:
        -
          name: title
          in: query
          description: 'Nome do livro'
          required: true
          schema:
            type: string
        -
          name: author
          in: query
          description: 'Autor do livro'
          required: true
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Descrição do livro'
          required: true
          schema:
            type: string
        -
          name: price
          in: query
          description: 'Preço do livro'
          required: true
          schema:
            type: string
        -
          name: categories
          in: query
          description: 'IDs das categorias'
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /books/week:
    get:
      tags:
        - books
      summary: 'Lista todos os livros aprovados na semana'
      operationId: GetWeeklyBooks
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  '/books/{id}':
    get:
      tags:
        - books
      summary: 'Lista um livro'
      operationId: GetBook
      parameters:
        -
          name: id
          in: path
          description: 'ID do livro'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    put:
      tags:
        - books
      summary: 'Atualiza um livro'
      operationId: PutBooks
      parameters:
        -
          name: id
          in: path
          description: 'ID do livro'
          required: true
          schema:
            type: integer
        -
          name: title
          in: query
          description: 'Nome do livro'
          required: false
          schema:
            type: string
        -
          name: author
          in: query
          description: 'Autor do livro'
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Descrição do livro'
          required: false
          schema:
            type: string
        -
          name: price
          in: query
          description: 'Preço do livro'
          required: false
          schema:
            type: string
        -
          name: status
          in: query
          description: 'Status do livro (só para admin)'
          required: false
          schema:
            type: string
        -
          name: categories
          in: query
          description: 'IDs das categorias'
          required: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    delete:
      tags:
        - books
      summary: 'Apaga um livro'
      operationId: DeleteBook
      parameters:
        -
          name: id
          in: path
          description: 'ID do livro'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /categories:
    get:
      tags:
        - categories
      summary: 'Lista todas as categorias'
      operationId: GetCategories
      parameters:
        -
          name: name
          in: query
          description: 'Nome da categoria'
          required: false
          schema:
            type: string
        -
          name: includes
          in: query
          description: 'Faz o include das relações '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    post:
      tags:
        - categories
      summary: 'Cria uma nova categoria'
      operationId: PostCategories
      parameters:
        -
          name: name
          in: query
          description: 'Nome da categoria'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  '/categories/{id}':
    get:
      tags:
        - categories
      summary: 'Lista uma categoria'
      operationId: GetCategory
      parameters:
        -
          name: id
          in: path
          description: 'ID da categoria'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    put:
      tags:
        - categories
      summary: 'Atualiza uma categoria'
      operationId: PutCategories
      parameters:
        -
          name: id
          in: path
          description: 'ID da categoria'
          required: true
          schema:
            type: integer
        -
          name: name
          in: query
          description: 'Nome da categoria'
          required: false
          schema:
            type: number
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    delete:
      tags:
        - categories
      summary: 'Apaga uma categoria'
      operationId: DeleteCategory
      parameters:
        -
          name: id
          in: path
          description: 'ID da categoria'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /rooms:
    get:
      tags:
        - chat
      summary: 'Lista todos os chats do usuário autenticado'
      operationId: GetRooms
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  '/rooms/{room_id}/messages':
    get:
      tags:
        - chat
      summary: 'Lista todas as mensagens de um chat'
      operationId: GetMessages
      parameters:
        -
          name: room_id
          in: path
          description: 'ID do chat'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
  '/rooms/{advertiserId}/w/{buyerId}':
    post:
      tags:
        - chat
      summary: 'Cria uma mensagem em um chat'
      operationId: PostMessage
      parameters:
        -
          name: advertiserId
          in: path
          description: 'ID do anunciante'
          required: true
          schema:
            type: integer
        -
          name: buyerId
          in: path
          description: 'ID do comprador'
          required: true
          schema:
            type: integer
        -
          name: message
          in: query
          description: Mensagem
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /users/me:
    get:
      tags:
        - users
      summary: 'Retorna o usuário logado'
      operationId: GetAuthUser
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    put:
      tags:
        - users
      summary: 'Atualiza o usuário'
      operationId: UpdateAuthUser
      parameters:
        -
          name: first_name
          in: query
          description: 'Primeiro nome'
          required: false
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Ultimo nome'
          required: false
          schema:
            type: string
        -
          name: address_street
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_number
          in: query
          description: 'Numero da casa do rapaz'
          required: false
          schema:
            type: string
        -
          name: address_neighborhood
          in: query
          description: 'Bairro onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_city
          in: query
          description: 'Cidade onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_state
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_zip_code
          in: query
          description: 'CEP do cidadão'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do cidadão'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /users/me/change:
    put:
      tags:
        - users
      summary: 'Atualiza a senha do usuário'
      operationId: UpdateAuthUserPassword
      parameters:
        -
          name: old_password
          in: query
          description: 'Senha antiga do usuário'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Nova senha do usuário'
          required: true
          schema:
            type: string
        -
          name: password_confirmation
          in: query
          description: 'Confirmação da senha'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /users/me/likes:
    get:
      tags:
        - users
      summary: 'Retorna todos os livros likados do usuário logado'
      operationId: UserLikedBooks
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  '/users/me/likes/{bookId}':
    post:
      tags:
        - users
      summary: 'Dá um like em um livro para o usuário logado'
      operationId: UserLikeBook
      parameters:
        -
          name: bookId
          in: path
          description: 'ID do livro'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  '/users/me/reports/{reportedId}':
    post:
      tags:
        - users
      summary: 'Denúncia um usuário'
      operationId: UserReport
      parameters:
        -
          name: reportedId
          in: path
          description: 'ID do usuário que vai ser reportado'
          required: true
          schema:
            type: integer
        -
          name: type_id
          in: query
          description: 'ID do tipo de report'
          required: true
          schema:
            type: integer
        -
          name: description
          in: query
          description: 'Descrição da denúncia'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /users:
    get:
      tags:
        - users
      summary: 'Lista todas os usuários'
      operationId: GetUsers
      parameters:
        -
          name: includes
          in: query
          description: 'Faz o include das relações '
          required: false
          schema:
            type: array
            items:
              type: string
        -
          name: first_name
          in: query
          description: 'Nome do usuário'
          required: false
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Sobrenome do usuário'
          required: false
          schema:
            type: string
        -
          name: is_admin
          in: query
          description: 'Status de Administrador'
          required: false
          schema:
            type: number
            enum:
              - 0
              - 1
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    post:
      tags:
        - users
      summary: 'Cria um novo usuário'
      operationId: StoreUser
      parameters:
        -
          name: first_name
          in: query
          description: 'Primeiro nome'
          required: true
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Ultimo nome'
          required: true
          schema:
            type: string
        -
          name: address_street
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_number
          in: query
          description: 'Numero da casa do rapaz'
          required: false
          schema:
            type: string
        -
          name: address_city
          in: query
          description: 'Cidade onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_state
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_zip_code
          in: query
          description: 'CEP onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do cidadão'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha do cidadão'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  '/users/{id}':
    get:
      tags:
        - users
      summary: 'Lista um usuário'
      operationId: GetUser
      parameters:
        -
          name: id
          in: path
          description: 'Id do usuário'
          required: true
          schema:
            type: number
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    put:
      tags:
        - users
      summary: 'Atualiza um usuário'
      operationId: UpdateUser
      parameters:
        -
          name: id
          in: path
          description: 'ID do usuário'
          required: true
          schema:
            type: integer
        -
          name: first_name
          in: query
          description: 'Primeiro nome'
          required: false
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Ultimo nome'
          required: false
          schema:
            type: string
        -
          name: address_street
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_number
          in: query
          description: 'Numero da casa do rapaz'
          required: false
          schema:
            type: string
        -
          name: address_city
          in: query
          description: 'Cidade onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_state
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_zip_code
          in: query
          description: 'CEP onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do cidadão'
          required: false
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha do cidadão'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    delete:
      tags:
        - users
      summary: 'Apaga um usuário'
      operationId: DeleteUser
      parameters:
        -
          name: id
          in: path
          description: 'Id do usuário'
          required: true
          schema:
            type: number
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
components:
  securitySchemes:
    apiToken:
      type: apiKey
      description: 'Token do client para consumo da API'
      name: Authorization
      in: header
      scheme: bearer
