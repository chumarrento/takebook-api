<?php


namespace App\Http\Controllers\Report;


use App\Entities\Report\Report;
use App\Http\Controllers\ApiController;
use App\Repositories\Report\ReportRepository;
use App\Traits\ApiResponse;
use Illuminate\Http\Request;

class ReportController extends ApiController
{
    use ApiResponse;

    public function __construct(Report $model, ReportRepository $repository)
    {
        $this->model = $model;
        $this->repository = $repository;
        $this->middleware('admin');
    }

    /**
     * @OA\Get(
     *     path="/reports",
     *     summary="Lista todos os reports em anÃ¡lise",
     *     operationId="GetReports",
     *     tags={"reports"},
     *     security={{"apiToken":{}}},
     *     @OA\Response(
     *         response=200,
     *         description="...",
     *     ),
     *  )
     */
    public function getReports(Request $request)
    {
        $data = $this->repository->findAll();

        return $this->success($data);
    }

    /**
     * @OA\Put(
     *     path="/reports/{id}",
     *     summary="Atualiza um report",
     *     operationId="PutReport",
     *     tags={"reports"},
     *     security={{"apiToken":{}}},
     *     @OA\Parameter(
     *         name="id",
     *         in="path",
     *         description="ID do report",
     *         required=true,
     *         @OA\Schema(
     *           type="integer"
     *         )
     *     ),
     *     @OA\Parameter(
     *         name="status_id",
     *         in="query",
     *         description="ID do status de report",
     *         required=true,
     *         @OA\Schema(
     *           type="integer"
     *         )
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="...",
     *     ),
     *  )
     */
    public function putReport(Request $request, $id)
    {
        $this->validate($request, [
            'status_id' => 'integer|required|exists:report_status,id'
        ]);

        $data = $this->repository->update($request->only('status_id'), $id);
        return $this->success($data);
    }

    /**
     * @OA\Delete(
     *     path="/reports/{id}",
     *     summary="Apaga um report",
     *     operationId="DeleteReport",
     *     tags={"reports"},
     *     security={{"apiToken":{}}},
     *     @OA\Parameter(
     *         name="id",
     *         in="path",
     *         description="ID do report",
     *         required=true,
     *         @OA\Schema(
     *           type="integer"
     *         )
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="...",
     *     ),
     *  )
     */
    public function deleteReport(int $id)
    {
        return parent::destroy($id); // TODO: Change the autogenerated stub
    }
}
